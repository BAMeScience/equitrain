[build-system]
requires = [
    "setuptools>=61.0.0",
    "setuptools-scm>=8.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "equitrain"
dynamic = ["version"]
description = "A training framework for machine learning interatomic potentials (MLIPs) with support for MACE, SevenNet, ANI, and M3GNet models"
authors = [
    {name = "Carlos Madariaga", email = "carlos.madariaga@bam.de"},
    {name = "Jose M. Pizarro", email = "jose.pizarro-blanco@bam.de"},
    {name = "Janosh Riebesell"},
    {name = "Philipp Benner", email = "philipp.benner@bam.de"},
]
readme = "README.md"
requires-python = ">=3.10"
keywords = ["MLIP", "machine learning", "materials", "M3GNet", "MACE", "SevenNet", "ANI", "interatomic potential"]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
dependencies = [
    "matscipy",
    "lightning",
    "beautifulsoup4",
    "pqdm",
    "mace-torch",
    "ase",
    "h5py",
    "pymatgen",
    "torch",
    "torch_geometric",
    "torch_ema",
    "tqdm",
    "accelerate",
]

[project.optional-dependencies]
# Development dependencies
dev = [
  "mypy==1.0.1",
  "ruff",
  "pytest",
]

# Documentation dependencies
docu = [
  "mkdocs",
  "mkdocs-material",
  "pymdown-extensions",
  "mkdocs-click",
]

# Model-specific dependencies
m3gnet = [
  "matgl>=1.0.0",  # Materials Graph Library for M3GNet models
  "dgl>=1.0.0",    # Deep Graph Library required by MatGL
]

ani = [
  "torchani>=2.2",  # TorchANI for ANI models
]

# All models dependencies
all-models = [
  "matgl>=1.0.0",
  "dgl>=1.0.0",
  "torchani>=2.2",
]

[project.scripts]
equitrain            = "equitrain.scripts.equitrain:main"
equitrain-evaluate   = "equitrain.scripts.equitrain_evaluate:main"
equitrain-export     = "equitrain.scripts.equitrain_export:main"
equitrain-inspect    = "equitrain.scripts.equitrain_inspect:main"
equitrain-predict    = "equitrain.scripts.equitrain_predict:main"
equitrain-preprocess = "equitrain.scripts.equitrain_preprocess:main"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
include = ["equitrain/*.py", "tests/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "dependencies",
]
# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "PL", # pylint
    "F", # Pyflakes
    "UP", # pyupgrade
    "I", # isort
]
ignore = [
    "F401", # Module imported but unused
    "E501", # Line too long ({width} > {limit} characters)
    "E701", # Multiple statements on one line (colon)
    "E731", # Do not assign a lambda expression, use a def
    "E402",  # Module level import not at top of file
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# this is entirely optional, you can remove this if you wish to
[tool.ruff.format]
# use single quotes for strings.
quote-style = "single"
# indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
strict = false
ignore_missing_imports = true
follow_imports = "silent"
disable_error_code = "import, annotation-unchecked"

[tool.setuptools.packages.find]
where = ["."]
include = ["equitrain"]
exclude = ["equitrain/data/format_lmdb"]

[tool.equitrain]
conda_env_file = "environment.yml"

[tool.setuptools_scm]
write_to = "equitrain/_version.py"